---
name: CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      description: ${{ steps.information.outputs.description }}
      environment: ${{ steps.information.outputs.environment }}
      name: ${{ steps.information.outputs.name }}
      version: ${{ steps.information.outputs.version }}
      build_date: ${{ steps.information.outputs.build_date }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2
      - name: ℹ️ Gather version and environment
        id: information
        shell: bash
        run: |
          sha="${{ github.sha }}"
          environment="edge"
          version="${sha:0:7}"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
            environment="stable"
            if [[ "${{ github.event.release.prerelease }}" = "true" ]]; then
              environment="beta"
            fi
          fi

          echo "::set-output name=environment::${environment}"
          echo "::set-output name=version::${version}"

          echo "::set-output name=name::Drive rclone"
          echo "::set-output name=description::Provides a mount for a google drive folder"

  lint-addon:
    name: Lint Add-on
    needs:
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run Add-on Lint
        uses: frenck/action-addon-linter@v2.3
        with:
          community: true
          path: "./${{ needs.information.outputs.target }}"

  lint-hadolint:
    name: Hadolint
    needs:
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run Hadolint
        uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: "./${{ needs.information.outputs.target }}/Dockerfile"

  lint-json:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run JQ
        run: |
          shopt -s globstar
          cat **/*.json | jq '.'

  lint-markdown:
    name: MarkdownLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run mdl
        uses: actionshub/markdownlint@2.0.2

  lint-shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run Shellcheck
        uses: ludeeus/action-shellcheck@1.1.0
        env:
          SHELLCHECK_OPTS: -s bash

  lint-yamllint:
    name: YAMLLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run YAMLLint
        uses: frenck/action-yamllint@v1.1

  lint-prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run Prettier
        uses: creyD/prettier_action@v4.0
        with:
          prettier_options: --write **/*.{json,js,md,yaml}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build ${{ matrix.architecture }}
    needs:
      - information
      - lint-addon
      - lint-hadolint
      - lint-json
      - lint-markdown
      - lint-prettier
      - lint-shellcheck
      - lint-yamllint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - aarch64
          - amd64
          - armhf
          - armv7
          - i386
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.docker-cache
          key: docker-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            docker-${{ matrix.architecture }}
      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CI_PAT }}
      - name: 🏗 Set up CodeNotary
        run: bash <(curl https://getvcn.codenotary.com -L)
      - name: 🚀 Build
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: ./Dockerfile
          cache-from: |
            type=local,src=/tmp/.docker-cache
            ghcr.io/troykelly/rclone-drive:edge
          cache-to: type=local,mode=max,dest=/tmp/.docker-cache-new
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          build-args: |
            BUILD_DATE=${{ needs.information.outputs.build_date }}
            BUILD_DESCRIPTION=${{ needs.information.outputs.description }}
            BUILD_NAME=${{ needs.information.outputs.name }}
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=${{ needs.information.outputs.version }}
      # This ugly bit is necessary, or our cache will grow forever...
      # Well until we hit GitHub's limit of 5GB :)
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Swap build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
