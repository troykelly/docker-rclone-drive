---
name: Deploy

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - published
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed

jobs:
  information:
    if: |
      github.event_name == 'release'
      || (
        github.event_name == 'workflow_run'
        && github.event.workflow_run.conclusion == 'success'
      )
    name: ℹ️ Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      description: ${{ steps.information.outputs.description }}
      environment: ${{ steps.information.outputs.environment }}
      name: ${{ steps.information.outputs.name }}
      version: ${{ steps.information.outputs.version }}
      build_date: ${{ steps.information.outputs.build_date }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2
      - name: ℹ️ Gather version and environment
        id: information
        # yamllint disable rule:line-length
        run: |
          sha="${{ github.sha }}"
          environment="edge"
          version="${sha:0:7}"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
            environment="stable"
            if [[ "${{ github.event.release.prerelease }}" = "true" ]]; then
              environment="beta"
            fi
          fi

          echo "::set-output name=environment::${environment}"
          echo "::set-output name=version::${version}"

          echo "::set-output name=name::Drive rclone"
          echo "::set-output name=description::Provides a mount for a google drive folder"
        # yamllint enable rule:line-length
  deploy:
    name: 👷 Build & Deploy
    needs:
      - information
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2

      - name: 📝 Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            troykelly/rclone-drive
            ghcr.io/troykelly/rclone-drive
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: 🏗 Set up CodeNotary
        run: bash <(curl https://getvcn.codenotary.com -L)

      - name: 🏗  Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗  Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CI_PAT }}
        
      - name: 🚀 Build
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: ./rgdrive
          file: ./rgdrive/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          # yamllint disable-line rule:line-length
          platforms: linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8
          build-args: |
            BUILD_DATE=${{ steps.flags.outputs.date }}
            BUILD_DESCRIPTION=${{ needs.information.outputs.description }}
            BUILD_NAME=${{ needs.information.outputs.name }}
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=${{ needs.information.outputs.version }}
      # This ugly bit is necessary, or our cache will grow forever...
      # Well until we hit GitHub's limit of 5GB :)
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Swap build cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: 🔏 Notarize
        # yamllint disable rule:line-length
        run: |
          if vcn authenticate \
            --output json \
            "docker://ghcr.io/troykelly/rclone-drive:${{ needs.information.outputs.version }}" \
            | jq \
              --exit-status \
              '.verification.status != 0';
          then
            vcn login
            vcn notarize \
              --public \
              "docker://ghcr.io/troykelly/rclone-drive:${{ needs.information.outputs.version }}"
          fi
        # yamllint enable rule:line-length
        env:
          VCN_USER: ${{ secrets.VCN_USER }}
          VCN_PASSWORD: ${{ secrets.VCN_PASSWORD }}
          VCN_NOTARIZATION_PASSWORD: ${{ secrets.VCN_NOTARIZATION_PASSWORD }}
          VCN_OTP_EMPTY: true

      # - name: 🚀 Push
      #   # yamllint disable rule:line-length
      #   run: |
      #     docker push \
      #       "ghcr.io/troykelly/rclone-drive:${{ needs.information.outputs.environment }}"
      #     docker push \
      #       "ghcr.io/troykelly/rclone-drive:${{ needs.information.outputs.version }}"
      #     docker push \
      #       "troykelly/rclone-drive:${{ needs.information.outputs.environment }}"
      #     docker push \
      #       "troykelly/rclone-drive:${{ steps.prepare.outputs.version }}"
      #   # yamllint enable rule:line-length